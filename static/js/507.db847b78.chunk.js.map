{"version":3,"file":"static/js/507.db847b78.chunk.js","mappings":"kMACA,GAAgB,cAAgB,gCAAgC,QAAU,2BCA1E,K,mBCKO,SAASA,EAAOC,GAEnB,IAAMC,EAAO,YAAcD,EAAME,GAEjC,OACI,gBAAKC,UAAWC,EAAAA,QAAhB,UACI,iBAAKD,UAAWC,EAAAA,OAAhB,eAA2B,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,YCXjE,SCIO,SAASC,EAAQP,GACpB,OACI,gBAAKG,UAAWC,EAAAA,QAAhB,UACI,gBAAKD,UAAWC,EAAAA,QAAhB,SAA4BJ,EAAMQ,Y,uECF1CC,GAAYC,EAAAA,EAAAA,GAAiB,IAe1B,IAAMC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,kBAAjBD,EAd5B,SAAwBZ,GAC3B,OACI,kBAAMc,SAAUd,EAAMe,aAAtB,WACI,SAACC,EAAA,EAAD,CAAOV,KAAK,iBACLW,UAAWC,EAAAA,EACXC,SAAU,CAACC,EAAAA,EAAUX,GACrBY,YAAY,wBACnB,0BACI,6CC4BhB,MA9BC,WAEG,IAAMC,GAAgBC,EAAAA,EAAAA,KAA6C,SAACC,GAAD,OAAUA,EAAMF,gBAC7EG,GAAcF,EAAAA,EAAAA,KAAgD,SAACC,GAAD,OAAUA,EAAME,QAC9EC,GAAWC,EAAAA,EAAAA,MACXC,EAAkBP,EAAaQ,QAChCC,KAAI,SAACC,GAAD,OAAY,SAACjC,EAAD,CAAQO,KAAM0B,EAAO1B,KAAMJ,GAAI8B,EAAO9B,IAAS8B,EAAO9B,OACrE+B,EAAmBX,EAAaY,SACjCH,KAAI,SAACvB,GAAD,OAAa,SAACD,EAAD,CAASC,QAASA,EAAQA,QAASN,GAAIM,EAAQN,IAASM,EAAQN,OAStF,OAAKuB,EAAWU,QAEZ,iBAAKhC,UAAWC,EAAAA,cAAhB,WACI,gBAAKD,UAAWC,EAAAA,QAAhB,SACKyB,KAEL,iBAAK1B,UAAWC,EAAAA,SAAhB,UACK6B,GACD,SAACtB,EAAD,CAAqBG,SAbb,SAACsB,GACnBT,GAASU,EAAAA,EAAAA,GAAcD,EAAOE,2BAIA,SAAC,KAAD,CAAUjC,GAAI","sources":["webpack://my-social-network-app-ts/./src/components/Messages/Messages.module.scss?b126","components/Messages/Dialog/Dialog.module.scss","components/Messages/Dialog/Dialog.tsx","components/Messages/Message/Message.module.scss","components/Messages/Message/Message.tsx","components/Messages/Message/AddMessageForm.tsx","components/Messages/Messages.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"messagesBlock\":\"Messages_messagesBlock__jkpm9\",\"dialogs\":\"Messages_dialogs__y6XZi\"};","// extracted by mini-css-extract-plugin\nexport default {};","import React from \"react\";\nimport s from \"./Dialog.module.scss\"\nimport {NavLink} from \"react-router-dom\";\nimport {DialogType} from \"../../../Redux/messages-reducer\";\n\n\nexport function Dialog(props:DialogType){\n\n    const path = \"messages/\" + props.id\n\n    return(\n        <div className={s.message}>\n            <div className={s.dialog}> <NavLink to={path}>{props.name}</NavLink></div>\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {};","import React from \"react\";\nimport s from \"./Message.module.scss\"\nimport {MessageType} from \"../../../Redux/messages-reducer\";\n\n\nexport function Message(props: MessageType) {\n    return (\n        <div className={s.message}>\n            <div className={s.message}>{props.message}</div>\n        </div>\n    )\n}","import React from \"react\";\nimport s from \"./AddMessageForm.module.scss\"\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\n\nlet maxLength = maxLengthCreator(30)\nexport function AddMessageForm(props: any) {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field name=\"newMessageBody\"\n                   component={Textarea}\n                   validate={[required, maxLength]}\n                   placeholder=\"Enter your message\"/>\n            <div>\n                <button>send</button>\n            </div>\n        </form>\n    )\n}\n\nexport const AddMessageReduxForm = reduxForm({form: 'messageAddForm'})(AddMessageForm)","import React from \"react\";\nimport s from \"./Messages.module.scss\"\nimport {Dialog} from \"./Dialog/Dialog\";\nimport {Message} from \"./Message/Message\";\nimport {sendMessageAC} from \"../../Redux/messages-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootStateType} from \"../../Redux/store\";\nimport {initialStateType} from \"../../Redux/messages-reducer\";\nimport {initialAuthStateType} from \"../../Redux/auth-reducer\";\nimport {Navigate} from \"react-router-dom\";\nimport {AddMessageReduxForm} from \"./Message/AddMessageForm\";\n\n\n function Messages() {\n\n    const messagesPage =  useSelector<RootStateType, initialStateType>((state)=> state.messagesPage)\n    const isAuthPage =  useSelector<RootStateType,initialAuthStateType>((state)=> state.auth)\n    const dispatch = useDispatch()\n    const dialogsElements = messagesPage.dialogs\n        .map((dialog) => <Dialog name={dialog.name} id={dialog.id} key={dialog.id}/>)\n    const messagesElements = messagesPage.messages\n        .map((message) => <Message message={message.message} id={message.id} key={message.id}/>)\n\n\n    \n  const addNewMessage = (values:any) => {\n      dispatch(sendMessageAC(values.newMessageBody))\n    }\n\n\n    if (!isAuthPage.isAuth ) return <Navigate to={'/login'}/>\n    return (\n        <div className={s.messagesBlock}>\n            <div className={s.dialogs}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                {messagesElements}\n                <AddMessageReduxForm onSubmit={addNewMessage} />\n            </div>\n        </div>\n    )\n}\nexport default Messages"],"names":["Dialog","props","path","id","className","s","to","name","Message","message","maxLength","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","messagesPage","useSelector","state","isAuthPage","auth","dispatch","useDispatch","dialogsElements","dialogs","map","dialog","messagesElements","messages","isAuth","values","sendMessageAC","newMessageBody"],"sourceRoot":""}